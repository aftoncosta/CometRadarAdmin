<html>
<head>
<script type="text/javascript" src="cSnapToRoute.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
   
<script>
    var scriptTag = '<' + 'script src="http://maps.google.com/maps?file=api&v=2&key=ABQIAAAAaM_sLwiURV29A34WD9kD4xTEnAIqM-Bl8RvAWQX--wxQYWaF3hSzadXTlJzp6USDLBVMnFFYaLq84Q">'+'<'+'/script>';
    document.write(scriptTag);
</script>
<!--script>
    var scriptTag = '<' + 'script src="http://maps.google.com/maps?file=api&v=3&key=AAIzaSyAM5N1611dbRnkSCLfoDwzhp0PPZkTnrkY">'+'<'+'/script>';
    document.write(scriptTag);
</script-->
<script type="text/javascript">
window.onload = function ()
{
load();
}

var decodedPoly;
var rendererOptions = {
    suppressMarkers: true,
    draggable: false
};
var directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);

  var directionsService = new google.maps.DirectionsService();

var vars = [], hash;


function calcRoute(olat, olong, dlat, dlong, wp) {

    var request = {
      origin: new google.maps.LatLng(olat, olong),
      destination: new google.maps.LatLng(dlat, dlong),
      waypoints: wp,
      travelMode: google.maps.TravelMode.DRIVING
    };
    directionsService.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directionsDisplay.setDirections(response);
        decodedPoly = google.maps.geometry.encoding.decodePath(directionsDisplay.directions.routes[0].overview_polyline);
        console.log(decodedPoly);
    doLoad();
      }
    });
}

var map;
var centerPoint = new GLatLng(32.985700, -96.752514);
var routePoints = Array();
var routePixels = Array();
var routeOverlay = null;
var normalProj = G_NORMAL_MAP.getProjection();    
var threshold = 15; //pixels for proximity
var oSnap;

//console.log(directionsDisplay);

//console.log(decodedPoly);

function load() {
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');

    for(var i = 0; i < hashes.length; i++)
    {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }

     $.ajax({
        url: 'http://127.0.0.1:3000/route-waypoints?route=' + vars.route,    // Pass route name here through a query
        type: 'GET',
        dataType: 'json',
        async: false,
        success: function(data) { 
          var waypts = [];

          for(var i in data){
              if(data[i].wp_lat != null){
                waypts.push({
                    location: new google.maps.LatLng(data[i].wp_lat, data[i].wp_long)
                });
              }
          }
          calcRoute(data[0].originLat, data[0].originLong, data[0].destLat, data[0].destLong, waypts);
     //console.log(decodedPoly);
        },
        error: function(jqXHR, textStatus, errorThrown) {
            alert('error ' + textStatus + " " + errorThrown);
        }
    });
}

function doLoad() {
    if (GBrowserIsCompatible()) {
        map = new GMap2(document.getElementById("map"), {draggableCursor:"crosshair"});
        map.setCenter(centerPoint, 15);
        map.addControl(new GScaleControl());
        map.addControl(new GLargeMapControl());
        map.addControl(new GMapTypeControl());   
    }

    for(var i in decodedPoly){
        addRoutePoint(new GLatLng(decodedPoly[i].k, decodedPoly[i].D));
    }
console.log(vars)
    mapMove(new GLatLng(vars.lat, vars.long));
}

function mapMove(point) {
    var oStatusDiv = document.getElementById("statusDiv")    
    if (oSnap){
        oSnap.getDistAlongRoute(point).toFixed(0);
    	oStatusDiv.innerHTML =  oSnap.getClosestLatLng(point);
    
        //console.log(oSnap.getClosestLatLng(point).k);
        $.ajax({
            url: "http://127.0.0.1:3000/doQuery?string=INSERT INTO pickup_request (pickup_request.route_name, pickup_request.lat, pickup_request.long) VALUES ('" + vars.route + "', '" + oSnap.getClosestLatLng(point).k + "', '" + oSnap.getClosestLatLng(point).D + "');", 
            type: 'GET',
            dataType: 'json'
       });
    }
}

function addRoutePoint(point) {
    var zoom = map.getZoom();
    routePoints.push(point);
    var Px = normalProj.fromLatLngToPixel(point, zoom);
    routePixels.push(Px);

    if (routePoints.length > 1)    {
        plotRoute();
        if ( !oSnap ) {
            oSnap = new cSnapToRoute();
            oSnap.init(map, startMarker, routeOverlay);
        } else {
            oSnap.updateTargets(null, routeOverlay);
        }
    }
    else {
        startMarker = createMarker(point,'Start')
        map.addOverlay(startMarker);
    }
}

function plotRoute() {
    if ( routeOverlay ) {
        map.removeOverlay(routeOverlay);
    }
    routeOverlay = new GPolyline(routePoints,'#FF9601',3,1);
    map.addOverlay(routeOverlay);
}

function createMarker(point, title) {
    var marker = new GMarker(point,{title:title});
    GEvent.addListener(marker, "click", function() {
        marker.openInfoWindowHtml(title + '<hr>Lat: ' + point.y + '<br>Lon: ' + point.x);
    });
    return marker;
}

function resetRoute() {
    routePoints = new Array();
    routePixels = new Array();
    map.clearOverlays();
    var oStatusDiv = document.getElementById("statusDiv")    
    oStatusDiv.innerHTML = '';
}

</script>
</head>
<body><!--onload="load()" onunload="GUnload()"-->
    <div id="map" style="width: 700px; height: 500px"></div>
    <div id="statusDiv"></div><!--end-->
</body>
</html>